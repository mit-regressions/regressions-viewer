import React, { useRef } from "react";
import { type NextPage } from "next";
import Head from "next/head";
import { useRouter } from 'next/router';

import { signIn, signOut, useSession } from "next-auth/react";

import { trpc } from "../utils/trpc";
import { useTheme } from 'next-themes'

import WebVttPlayer from "../components/WebVttPlayer/WebVttPlayer";

const Home: NextPage = () => {

  const hello = trpc.example.hello.useQuery({ text: "from tRPC" });
  const { theme, setTheme } = useTheme()

  const router = useRouter();

  const videoUrl = '/data/MIT Regressions intro video.mp4' // BIZARRE BUG: react-player component only works when I live-reload URL to valid path. if Chrome loads directly, then returns "failed to load media".
  const audioUrl = router.asPath + 'data/MIT Regressions intro audio.mp3'
  const transcriptUrl = router.asPath + "data/MIT Regressions intro captions.vtt"
  const metadataUrl = router.asPath + "data/MIT Regressions intro metadata.vtt"


  return (
    <>
      <Head>
        <title>viewer</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-white dark:bg-black">
        <button onClick={() => setTheme(theme === 'dark' ? 'light' : 'dark')} className="bg-gray-200 dark:bg-gray-800 text-gray-800 dark:text-gray-200 py-2 px-4 absolute top-4 right-4">
          toggle theme
        </button>
        <div className="px-4 py-32 pb-0 position-absolute">
          <div className="titles">
            <h1 className="text-1xl font-extrabold tracking-tight text-black dark:text-white sm:text-[3rem] top-4 left-4 absolute">
              documentary metadata viewer
            </h1>
            {/* hug the left-hand side of the screen */}
            <h2 className=" tracking-tight text-gray-500 dark:text-white  top-20 left-6 absolute"><i>current film</i>: <a href="https://www.youtube.com/watch?v=TGKk3iwoI9I&ab_channel=MIT%3AREGRESSIONS">MIT: REGRESSIONS intro</a> &nbsp; | &nbsp; <a href="https://github.com/mit-regressions/viewer/blob/igel-t3-initial/viewer/public/data/MIT%20Regressions%20intro%20metadata.vtt">metadata source</a></h2>
            {/* <h2 className=" tracking-tight text-gray-500 dark:text-white  top-24 left-6 absolute"><i>metadata file source (VTT)</i>: <a href="https://www.youtube.com/watch?v=TGKk3iwoI9I&ab_channel=MIT%3AREGRESSIONS">MIT: REGRESSIONS intro</a></h2> */}
          </div>

          <WebVttPlayer
            preload={true}
            audio={audioUrl}
            videoUrl={videoUrl}
            transcript={transcriptUrl}
            metadataUrl={metadataUrl}
          />

          {/* <div className="flex flex-col items-center gap-2">
            <AuthShowcase />
          </div> */}
        </div>
      </main>
    </>
  );
}

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => signOut() : () => signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
